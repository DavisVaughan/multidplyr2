% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster-assign.R
\name{objman}
\alias{objman}
\alias{cluster_assign_expr}
\alias{cluster_assign_value}
\alias{cluster_assign_each}
\alias{cluster_copy}
\alias{cluster_get}
\alias{cluster_rm}
\alias{cluster_ls}
\title{Object management}
\usage{
cluster_assign_expr(cluster, name, expr)

cluster_assign_value(cluster, name, value)

cluster_assign_each(cluster, name, values)

cluster_copy(cluster, obj)

cluster_get(cluster, name)

cluster_rm(cluster, name)

cluster_ls(cluster)
}
\arguments{
\item{cluster}{Cluster to work on}

\item{name}{Name of variable as string.}

\item{value, values, expr}{There are three ways to do assignment:
you can set \code{name} to the same \code{value} on every node,
you can set \code{name} to each of \code{values}, or you
can evaluate \code{expr} once on each code.}

\item{obj}{An existing object to copy to the cluster.}
}
\value{
\code{cluster_assign_value}, \code{cluster_assign_each},
  \code{cluster_assign_expr}, and \code{cluster_rm} all (invisibly) return
  the cluster so they can be chained together.

  \code{cluster_ls} and \code{cluster_get} return lists with one element
  for each node.
}
\description{
If \code{cluster_assign_expr} fails on one node, successfully created
objects will be automatically deleted on all the other nodes.
}
\examples{
cl <- create_cluster(2)
cl \%>\%
  cluster_assign_value("x", 10) \%>\%
  cluster_get("x")

cl \%>\%
  cluster_assign_expr("y", quote(runif(2))) \%>\%
  cluster_get("y")

cl \%>\%
  cluster_assign_each("z", list(3, 4)) \%>\%
  cluster_get("z")

a <- 1:10
cl \%>\%
  cluster_copy(a) \%>\%
  cluster_get("a")

cl \%>\% cluster_ls()
cl \%>\% cluster_rm(c("a", "x", "y", "z"))
cl \%>\% cluster_ls()
}
